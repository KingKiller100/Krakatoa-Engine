kmaths::Abs<long double> vs std::fabsl vs kmaths::Abs<double> vs std::fabs vs kmaths::Abs<float> vs std::fabsf vs kmaths::Abs<kmaths::Big_Int_Type> vs std::fabsf<kmaths::Big_Int_Type>: 
	kmaths::Abs<kmaths::Big_Int_Type> is the fastest on average by 114.862%
	Fastest Instance: std::fabsl Time: 500us (microseconds)
	Slowest Instance: std::fabsl Time: 714400us (microseconds)

kmaths::Cosine vs std::cos: 
	std::cos is the fastest on average by 405.297%
	Fastest Instance: std::cos Time: 600us (microseconds)
	Slowest Instance: kmaths::Cosine Time: 10600us (microseconds)

kmaths::FloatingPointRemainder vs std::fmod: 
	std::fmod is the fastest on average by 8.067%
	Fastest Instance: std::fmod Time: 600us (microseconds)
	Slowest Instance: std::fmod Time: 5500us (microseconds)

kmaths::Floor vs std::floor: 
	std::floor is the fastest on average by 19.164%
	Fastest Instance: std::floor Time: 600us (microseconds)
	Slowest Instance: kmaths::Floor Time: 107300us (microseconds)

kmaths::PowerOf<double> vs std::pow<double>: 
	std::pow<double> is the fastest on average by 14823.021%
	Fastest Instance: std::pow<double> Time: 500us (microseconds)
	Slowest Instance: kmaths::PowerOf<double> Time: 1312500us (microseconds)

kmaths::PowerOf<int> vs std::pow<int> vs kmaths::PowerOf<short> vs std::pow<short>: 
	std::pow<short> is the fastest on average by 14.976%
	Fastest Instance: std::pow<int> Time: 600us (microseconds)
	Slowest Instance: kmaths::PowerOf<int> Time: 35100us (microseconds)

kmaths::Sign vs std::copysign: 
	std::copysign is the fastest on average by 3.833%
	Fastest Instance: std::copysign Time: 600us (microseconds)
	Slowest Instance: std::copysign Time: 4100us (microseconds)

kmaths::Sine vs std::sin: 
	std::sin is the fastest on average by 550.781%
	Fastest Instance: std::sin Time: 600us (microseconds)
	Slowest Instance: kmaths::Sine Time: 750800us (microseconds)

kmaths::Sqrt vs std::sqrt vs kmaths::Root: 
	std::sqrt is the fastest on average by 409.530%
	Fastest Instance: std::sqrt Time: 500us (microseconds)
	Slowest Instance: kmaths::Root Time: 308100us (microseconds)

kmaths::Square vs kmaths::PowerOfImpl vs std::pow: 
	kmaths::Square is the fastest on average by 14.915%
	Fastest Instance: kmaths::Square Time: 500us (microseconds)
	Slowest Instance: kmaths::Square Time: 37100us (microseconds)

kmaths::Tan vs std::tan: 
	std::tan is the fastest on average by 1007.390%
	Fastest Instance: std::tan Time: 600us (microseconds)
	Slowest Instance: kmaths::Tan Time: 1237800us (microseconds)

